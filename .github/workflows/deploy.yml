name: Deploy WordPress

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-west-2
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Key Files
        run: |
          echo "${{ secrets.MY_KEY_PUB }}" > mykey.pub
          chmod 600 mykey.pub
          echo "${{ secrets.TARGET_INSTANCE_PEM }}" > mykey
          chmod 600 mykey

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          cd main
          terraform init

      - name: Terraform Apply
        run: |
          cd main
          terraform apply -auto-approve
          terraform refresh
      - name: Extract Terraform Outputs
        run: |
          cd main
          echo "DB_NAME=$(terraform output -raw db_name)" >> $GITHUB_ENV
          echo "DB_HOST=$(terraform output -raw rds_endpoint)" >> $GITHUB_ENV
          echo "DB_USER=$(terraform output -raw db_username)" >> $GITHUB_ENV
          echo "DB_PASS=$(terraform output -raw db_password)" >> $GITHUB_ENV
          echo "BASTION_IP=$(terraform output -raw bastion_public_ip)" >> $GITHUB_ENV
          echo "EFS_ID=$(terraform output -raw efs_id)" >> $GITHUB_ENV
          terraform output -json wordpress_private_ips | jq -r '.[]' > ../ansible/inventory_ips.txt

      - name: Debug Terraform Outputs
        run: |
          echo "Bastion IP: ${{ env.BASTION_IP }}"
          echo "EFS ID: ${{ env.EFS_ID }}"

      - name: Copy Private Key to Bastion
        run: |
          scp -o StrictHostKeyChecking=no -i mykey mykey ubuntu@${{ env.BASTION_IP }}:~/mykey
          scp -o StrictHostKeyChecking=no -i mykey mykey.pub ubuntu@${{ env.BASTION_IP }}:~/mykey.pub
          ssh -o StrictHostKeyChecking=no -i mykey ubuntu@${{ env.BASTION_IP }} "chmod 600 ~/mykey"

      - name: Copy Ansible Files to Bastion
        run: |
          scp -o StrictHostKeyChecking=no -i mykey ansible/inventory_ips.txt ubuntu@${{ env.BASTION_IP }}:~
          scp -o StrictHostKeyChecking=no -i mykey -r ansible ubuntu@${{ env.BASTION_IP }}:~

      - name: SSH into Bastion and Run Ansible
        run: |
          ssh -t -o StrictHostKeyChecking=no -i mykey ubuntu@${{ env.BASTION_IP }} << 'EOF'
            echo "Running on $(hostname)"

            # Ensure Ansible is installed
            sudo apt update && sudo apt install -y ansible

            # Create Ansible inventory
            echo "[wordpress]" > ~/ansible/inventory.ini
            cat ~/inventory_ips.txt >> ~/ansible/inventory.ini
            echo "" >> ~/ansible/inventory.ini
            echo "[wordpress:vars]" >> ~/ansible/inventory.ini
            echo "ansible_user=ec2-user" >> ~/ansible/inventory.ini
            echo "ansible_ssh_private_key_file=~/mykey" >> ~/ansible/inventory.ini
            echo "ansible_ssh_common_args=\"-o StrictHostKeyChecking=no\"" >> ~/ansible/inventory.ini
            echo "efs_id=${{ env.EFS_ID }}" >> ~/ansible/inventory.ini

            # Run Ansible Playbook
            cd ~/ansible
            ansible-playbook -i inventory.ini -u ec2-user --private-key ~/mykey playbook.yml \
              --extra-vars "db_name=${{ env.DB_NAME }} db_host=${{ env.DB_HOST }} db_user=${{ env.DB_USER }} db_pass=${{ env.DB_PASS }} efs_id=${{ env.EFS_ID }}"
          EOF
